{"ast":null,"code":"var _jsxFileName = \"D:\\\\final-project\\\\frontend\\\\src\\\\components\\\\DrivesDetails.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrivesDetails = () => {\n  _s();\n  const id = useParams().id;\n  const [drive, setDrives] = useState();\n  const fetchDetails = async () => {\n    const res = await axios.get(`http://localhost:5000/driveDetails/${id}`).catch(err => console.log(err));\n    const data = res.data;\n    return data;\n  };\n  console.log(id);\n  useEffect(() => {\n    fetchDetails().then(data => setDrives(dat));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"DrivesDetails\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(DrivesDetails, \"ylWVrMc5k3/Jlu9P498rO2L9PXQ=\", false, function () {\n  return [useParams];\n});\n_c = DrivesDetails;\nexport default DrivesDetails;\nvar _c;\n$RefreshReg$(_c, \"DrivesDetails\");","map":{"version":3,"names":["axios","React","useEffect","useState","useParams","jsxDEV","_jsxDEV","DrivesDetails","_s","id","drive","setDrives","fetchDetails","res","get","catch","err","console","log","data","then","dat","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/final-project/frontend/src/components/DrivesDetails.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect,useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst DrivesDetails = () => {\r\n  const id= useParams().id;\r\n  const [drive, setDrives] = useState()\r\n  const fetchDetails =async ()=>{\r\n    const res =await axios.get(`http://localhost:5000/driveDetails/${id}`).catch((err)=>console.log(err));\r\n    const data =res.data;\r\n    return data;\r\n  }\r\n  console.log(id);\r\n  useEffect(()=>{\r\n   fetchDetails().then(data=>setDrives(dat))\r\n  },[])\r\n  return (\r\n    <div>DrivesDetails</div>\r\n  )\r\n}\r\n\r\nexport default DrivesDetails"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,EAAE,GAAEL,SAAS,CAAC,CAAC,CAACK,EAAE;EACxB,MAAM,CAACC,KAAK,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACrC,MAAMS,YAAY,GAAE,MAAAA,CAAA,KAAU;IAC5B,MAAMC,GAAG,GAAE,MAAMb,KAAK,CAACc,GAAG,CAAE,sCAAqCL,EAAG,EAAC,CAAC,CAACM,KAAK,CAAEC,GAAG,IAAGC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACrG,MAAMG,IAAI,GAAEN,GAAG,CAACM,IAAI;IACpB,OAAOA,IAAI;EACb,CAAC;EACDF,OAAO,CAACC,GAAG,CAACT,EAAE,CAAC;EACfP,SAAS,CAAC,MAAI;IACbU,YAAY,CAAC,CAAC,CAACQ,IAAI,CAACD,IAAI,IAAER,SAAS,CAACU,GAAG,CAAC,CAAC;EAC1C,CAAC,EAAC,EAAE,CAAC;EACL,oBACEf,OAAA;IAAAgB,QAAA,EAAK;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE5B,CAAC;AAAAlB,EAAA,CAfKD,aAAa;EAAA,QACPH,SAAS;AAAA;AAAAuB,EAAA,GADfpB,aAAa;AAiBnB,eAAeA,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}