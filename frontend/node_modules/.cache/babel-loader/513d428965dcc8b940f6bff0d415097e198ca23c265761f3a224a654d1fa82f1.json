{"ast":null,"code":"var _jsxFileName = \"D:\\\\final-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Header from \"./components/Header\";\nimport React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Auth from \"./components/Auth\";\nimport Drives from \"./components/Drives\";\nimport UserDrives from \"./components/UserDrives\";\nimport AddDrives from \"./components/AddDrives\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DrivesDetails from \"./components/DrivesDetails\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\n  console.log(isLoggedIn);\n  const dispath = useDispatch();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/auth\",\n          element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/drives\",\n            element: /*#__PURE__*/_jsxDEV(Drives, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/myDrives\",\n            element: /*#__PURE__*/_jsxDEV(UserDrives, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/drives/add\",\n            element: /*#__PURE__*/_jsxDEV(AddDrives, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/drives/:id\",\n            element: /*#__PURE__*/_jsxDEV(DrivesDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 14\n          }, this), \"    \"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7J5sWsRzKn0UzjPLmJNmfotEKMQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","React","Routes","Route","Auth","Drives","UserDrives","AddDrives","useDispatch","useSelector","DrivesDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","state","console","log","dispath","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["D:/final-project/frontend/src/App.js"],"sourcesContent":["import Header from \"./components/Header\";\nimport React from \"react\";\nimport { Routes ,Route} from \"react-router-dom\";\nimport Auth from \"./components/Auth\";\nimport Drives from \"./components/Drives\";\nimport UserDrives from \"./components/UserDrives\";\nimport AddDrives from \"./components/AddDrives\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DrivesDetails from \"./components/DrivesDetails\";\n\nfunction App() {\n      const isLoggedIn=useSelector(state=>state.isLoggedIn);\n      console.log(isLoggedIn);\n      const dispath =useDispatch();\n  return (\n    <React.Fragment>\n        <header>\n          <Header />\n        </header>\n     <main>\n      <Routes>\n      {!isLoggedIn ?   (<Route path='/auth' element={<Auth />} /> ) :(\n      <>\n         <Route path='/drives' element={<Drives />} />\n             <Route path='/myDrives' element={<UserDrives />} />\n             <Route path='/drives/add' element={<AddDrives />} />       \n             <Route path='/drives/:id' element={<DrivesDetails />} />    </>        )}                                                         \n      </Routes>\n     </main>\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAC/C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACT,MAAMC,UAAU,GAACR,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACD,UAAU,CAAC;EACrDE,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACvB,MAAMI,OAAO,GAAEb,WAAW,CAAC,CAAC;EAChC,oBACEI,OAAA,CAACX,KAAK,CAACY,QAAQ;IAAAS,QAAA,gBACXV,OAAA;MAAAU,QAAA,eACEV,OAAA,CAACZ,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACZd,OAAA;MAAAU,QAAA,eACCV,OAAA,CAACV,MAAM;QAAAoB,QAAA,EACN,CAACL,UAAU,gBAAML,OAAA,CAACT,KAAK;UAACwB,IAAI,EAAC,OAAO;UAACC,OAAO,eAAEhB,OAAA,CAACR,IAAI;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAC3Dd,OAAA,CAAAE,SAAA;UAAAQ,QAAA,gBACGV,OAAA,CAACT,KAAK;YAACwB,IAAI,EAAC,SAAS;YAACC,OAAO,eAAEhB,OAAA,CAACP,MAAM;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzCd,OAAA,CAACT,KAAK;YAACwB,IAAI,EAAC,WAAW;YAACC,OAAO,eAAEhB,OAAA,CAACN,UAAU;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnDd,OAAA,CAACT,KAAK;YAACwB,IAAI,EAAC,aAAa;YAACC,OAAO,eAAEhB,OAAA,CAACL,SAAS;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpDd,OAAA,CAACT,KAAK;YAACwB,IAAI,EAAC,aAAa;YAACC,OAAO,eAAEhB,OAAA,CAACF,aAAa;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,QAAI;QAAA,eAAE;MAAU;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEQ,CAAC;AAErB;AAACV,EAAA,CAtBQD,GAAG;EAAA,QACWN,WAAW,EAEbD,WAAW;AAAA;AAAAqB,EAAA,GAHvBd,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}